trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'ubuntu-latest'

variables:
  nextRelease: ''

steps:
- task: GoTool@0
  displayName: 'Using Go v1.12'
  inputs:
    version: '1.12'

- task: Go@0
  displayName: 'Resolving Dependencies'
  inputs:
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: Go@0
  displayName: 'Building Abstrakt'
  inputs:
    command: build
    arguments: '-o "$(Build.Repository.Name)"'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- task: ArchiveFiles@2
  displayName: 'Archive Files'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    rootFolderOrFile: '$(Build.Repository.LocalPath)/$(Build.Repository.Name)'
    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    artifactName: drop

- bash: 'npx -p semantic-release -p @semantic-release/git -p semantic-release-ado semantic-release'
  displayName: 'Compute semantic release version'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  env:
    GH_TOKEN: Óùç $(GitHubToken)

- bash: 'echo $(nextRelease)'
  displayName: 'Show version value'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: GitHubRelease@1
  displayName: 'GitHub release (create)'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    gitHubConnection: Abstrakt
    tagSource: userSpecifiedTag
    tag: '$(nextRelease)'
    assets: '$(System.DefaultWorkingDirectory)/**/*.zip'
    isDraft: true
